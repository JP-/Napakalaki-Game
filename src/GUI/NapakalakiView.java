/******************************************************************/
// Clase NapakalakiView 
//
// (C) Antonio Calderón Cortiñas
// (C) Francisco Rafael Checa Molina
// (C) Juan Pablo Porcel Porcel
/******************************************************************/


package GUI;


import napakalaki.CombatResult;
import napakalaki.Napakalaki;

public class NapakalakiView extends javax.swing.JFrame {
    
    private Napakalaki napakalakiModel;
    private boolean hasfighted = false;

    /**
     * Creates new form NapakalakiView
     */
    public NapakalakiView() {
	initComponents();
    }
    
    public void setNapakalaki(Napakalaki n)
    {
	this.napakalakiModel = n;
	this.playerView.setNapakalaki(this.napakalakiModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        monsterView = new GUI.MonsterView();
        playerView = new GUI.PlayerView();
        next = new javax.swing.JButton();
        fight = new javax.swing.JButton();
        result = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setPreferredSize(new java.awt.Dimension(1280, 768));
        setType(java.awt.Window.Type.UTILITY);

        next.setFont(new java.awt.Font("L M Mono Caps10", 1, 15)); // NOI18N
        next.setText("Next Turn");
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });

        fight.setFont(new java.awt.Font("L M Mono Caps10", 1, 15)); // NOI18N
        fight.setText("Fight!");
        fight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fightActionPerformed(evt);
            }
        });

        result.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        result.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        result.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Result"));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(monsterView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(result, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(next, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(fight, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 209, Short.MAX_VALUE)
                .addComponent(playerView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(monsterView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72)
                .addComponent(next)
                .addGap(40, 40, 40)
                .addComponent(fight)
                .addGap(55, 55, 55)
                .addComponent(result, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 61, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(playerView, javax.swing.GroupLayout.PREFERRED_SIZE, 677, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed
        // TODO add your handling code here:
	if ( this.hasfighted && this.napakalakiModel.nextTurn() )
	{
	    this.monsterView.clear();
	    this.result.setText("");
	    this.hasfighted = false;
	    
	    this.playerView.puedeRegalar(true);
	    
	    showView();
	    
	    this.begin();
	}
    }//GEN-LAST:event_nextActionPerformed

    private void fightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fightActionPerformed
        // TODO add your handling code here:
	if ( !this.hasfighted )
	{
	    this.monsterView.setMonster(this.napakalakiModel.getCurrentMonster());
	    CombatResult r = this.napakalakiModel.developCombat();
	    if (r == CombatResult.Lose) this.result.setText("Lose");
	    else if (r == CombatResult.LoseAndConvert) this.result.setText("Lose and convert");
	    else if (r == CombatResult.LoseAndDie) this.result.setText("Lose and die");
	    else if (r == CombatResult.LoseAndScape) this.result.setText("Lose and scape");
	    else if (r == CombatResult.Win)
	    {
		this.result.setText("Win");
	    }
	    else if (r == CombatResult.WinAndWinGame)
	    {
		this.result.setText("Win and win the game");
		this.endOfGame(this.napakalakiModel.getCurrentPlayer().getName());
	    }


	    this.hasfighted = true;
	    
	    showView();
	}
    }//GEN-LAST:event_fightActionPerformed

    
    public void showView() 
    {
	this.playerView.setPlayer(this.napakalakiModel.getCurrentPlayer());
	this.next.setEnabled(hasfighted);
	this.fight.setEnabled(!hasfighted);
	this.setVisible(true);
	//GraphicsDevice ge=GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice();
	//ge.setFullScreenWindow(this);	
    }
    
    
    
    private void endOfGame(String p)
    {
	GUI.endGame end = new GUI.endGame(p);
	
	this.setEnabled(false);
	
	end.showView();
    }
    

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton fight;
    private GUI.MonsterView monsterView;
    private javax.swing.JButton next;
    private GUI.PlayerView playerView;
    private javax.swing.JLabel result;
    // End of variables declaration//GEN-END:variables


    // EXAMEN
    
    
    // En nextTurn, habilitar el boton regalar cuando pasa turno
    
    
    // FIN EXAMEN
    
    
    
    
    
    
    // EXAMEN SEPTIEMBRE
    
    
    // lineas 123 a 134, hacer tirar el dado al jugador
    
    
    public void begin()
    {
	if(!this.napakalakiModel.getCurrentPlayer().beginTurn())
	{
	    this.napakalakiModel.nextTurn();
	    this.monsterView.clear();
	    this.result.setText("");
	    this.hasfighted = false;

	    this.playerView.puedeRegalar(true);

	    showView();
	}
    }
    
    
    // FIN EXAMEN
}

